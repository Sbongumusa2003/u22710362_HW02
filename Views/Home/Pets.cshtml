@model u22710362_HW2.Models.PetRecordsVM

@{
    ViewBag.Title = "Available Pets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <!-- Page Header -->
    <div class="text-center mb-4">
        <h1>Available Pets for Adoption</h1>
        <p class="lead text-muted">Find your perfect companion</p>
    </div>

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Filter Pets</h5>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("SetPetFilter", "Home", FormMethod.Post, new { @class = "form-inline" }))
            {
                <div class="row">
                    <div class="col-md-3 mb-2">
                        <label for="petType" class="form-label">Type:</label>
                        <select name="petType" id="petType" class="form-control" onchange="filterBreeds()">
                            <option value="All" @(ViewBag.CurrentTypeFilter == "All" ? "selected" : "")>All Types</option>
                            @if (Model.PetTypes != null)
                            {
                                foreach (var type in Model.PetTypes)
                                {
                                    <option value="@type.TypeName" @(ViewBag.CurrentTypeFilter == type.TypeName ? "selected" : "")>@type.TypeName</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-3 mb-2">
                        <label for="breed" class="form-label">Breed:</label>
                        <select name="breed" id="breed" class="form-control">
                            <option value="All" @(ViewBag.CurrentBreedFilter == "All" ? "selected" : "")>All Breeds</option>
                            @if (Model.PetBreeds != null)
                            {
                                foreach (var breed in Model.PetBreeds)
                                {
                                    <option value="@breed.BreedName" data-pettype="@(Model.PetTypes?.FirstOrDefault(t => t.ID == breed.PetTypeID)?.TypeName)" @(ViewBag.CurrentBreedFilter == breed.BreedName ? "selected" : "")>@breed.BreedName</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-3 mb-2">
                        <label for="location" class="form-label">Location:</label>
                        <select name="location" id="location" class="form-control">
                            <option value="All" @(ViewBag.CurrentLocationFilter == "All" ? "selected" : "")>All Locations</option>
                            @if (Model.Locations != null)
                            {
                                foreach (var location in Model.Locations)
                                {
                                    <option value="@location.LocationName" @(ViewBag.CurrentLocationFilter == location.LocationName ? "selected" : "")>@location.LocationName</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-3 mb-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-success me-2">Search</button>
                        @Html.ActionLink("Clear", "ClearFilters", "Home", null, new { @class = "btn btn-secondary" })
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Pets Grid -->
    <div class="row">
        @if (Model.Pets != null && Model.Pets.Any())
        {
            foreach (var pet in Model.Pets)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="position-relative">
                            <img src="data:image/jpeg;base64,@pet.B64Image" class="card-img-top" alt="@pet.Name" style="height: 200px; object-fit: cover;">
                            <span class="badge position-absolute top-0 end-0 m-2 @(pet.Status == "Available" ? "badge-success" : "badge-secondary")">
                                @pet.Status
                            </span>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title text-primary">@pet.Name</h5>
                                <small class="text-muted">@pet.PetTypeName</small>
                            </div>

                            <div class="pet-info mb-2">
                                <div class="row">
                                    <div class="col-6">
                                        <small><strong>Location:</strong> @pet.LocationName</small><br>
                                        <small><strong>Age:</strong> @pet.Age years</small><br>
                                        <small><strong>Weight:</strong> @pet.Weight kg</small>
                                    </div>
                                    <div class="col-6">
                                        <small><strong>Gender:</strong> @pet.Gender</small><br>
                                        <small><strong>Breed:</strong> @pet.BreedName</small>
                                    </div>
                                </div>
                            </div>

                            <div class="mb-2">
                                <strong>Pet Story:</strong>
                                <p class="small text-muted">
                                    @(pet.PetStory.Length > 100 ? pet.PetStory.Substring(0, 100) + "..." : pet.PetStory)
                                </p>
                            </div>

                            <div class="mt-auto">
                                <small class="text-muted d-block mb-2">
                                    Posted by: @pet.PostedByFirstName @pet.PostedByLastName
                                </small>
                                @if (pet.Status == "Available")
                                {
                                    @Html.ActionLink("VIEW", "Adopt", "Home", new { id = pet.ID }, new { @class = "btn btn-primary w-100" })
                                }
                                else
                                {
                                    <button class="btn btn-secondary w-100" disabled>Adopted</button>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="text-center py-5">
                    <div class="card">
                        <div class="card-body">
                            <h3>No pets found</h3>
                            <p class="text-muted">Try adjusting your filters or check back later for new arrivals!</p>
                            @Html.ActionLink("Clear Filters", "ClearFilters", "Home", null, new { @class = "btn btn-primary" })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        function filterBreeds() {
            var selectedType = document.getElementById('petType').value;
            var breedSelect = document.getElementById('breed');
            var options = breedSelect.options;

            for (var i = 1; i < options.length; i++) {
                var option = options[i];
                var petType = option.getAttribute('data-pettype');

                if (selectedType === 'All' || petType === selectedType) {
                    option.style.display = 'block';
                } else {
                    option.style.display = 'none';
                }
            }

            // Reset breed selection if current selection is not valid for the new type
            if (selectedType !== 'All') {
                var currentBreed = breedSelect.value;
                var isValidBreed = false;

                for (var i = 1; i < options.length; i++) {
                    if (options[i].value === currentBreed && options[i].getAttribute('data-pettype') === selectedType) {
                        isValidBreed = true;
                        break;
                    }
                }

                if (!isValidBreed) {
                    breedSelect.value = 'All';
                }
            }
        }

        // Initialize breed filtering on page load
        document.addEventListener('DOMContentLoaded', function () {
            filterBreeds();
        });
    </script>
}

<style>
    .card {
        border: 1px solid #dee2e6;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

    .badge-success {
        background-color: #28a745;
    }

    .badge-secondary {
        background-color: #6c757d;
    }

    .pet-info small {
        line-height: 1.4;
    }

    .form-label {
        font-weight: 500;
        margin-bottom: 0.25rem;
    }
</style>